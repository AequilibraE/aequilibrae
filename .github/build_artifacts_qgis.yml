name: Python packages for use with QAequilibraE

on:  [pull_request, release]

env:
  QGIS_RELEASE: true


jobs:
  deploy:
    runs-on: ${{ matrix.os}}
    env:
      HAS_SECRETS: ${{ secrets.AWS_SECRET_ACCESS_KEY != '' }}
      CI_BUILD_QGIS_BINARY: "true"
    continue-on-error: true
    strategy:
      matrix:
        python-version: ['3.9']
        architecture: ['x64']
        os: [windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set Python environment
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: update versions to conform with QGIS
      run: |
        cd .github
        python qgis_requirements.py
        cd ..

    - name: Install dependencies MacOS
      if: ${{matrix.os == 'macos-latest'}}
      env:
        CC: "gcc-12"
        CXX: "g++-12"
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
        pip install -r requirements.txt
        pip install -r requirements_additional.txt

    - name: Build MacOS
      if: ${{matrix.os == 'macos-latest'}}
      env:
        CC: "gcc-12"
        CXX: "g++-12"
      run: python setup.py bdist_wheel

    - name: Install dependencies
      if: ${{matrix.os != 'macos-latest'}}
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
        pip install -r requirements.txt
        pip install -r requirements_additional.txt

    - name: Build
      if: ${{matrix.os != 'macos-latest'}}
      run: python setup.py sdist bdist_wheel

    - name: Stores artifacts along with the workflow result
      uses: actions/upload-artifact@v3
      with:
        name: library
        path: dist/*.whl
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

    - name: Publish
      if: ${{ (github.event_name == 'release') && (env.HAS_SECRETS == 'true') }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*.whl

    - name: Publish tar files
      if: ${{ (github.event_name == 'release') && (env.HAS_SECRETS == 'true') && (matrix.python-version == '3.9') }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*.gz
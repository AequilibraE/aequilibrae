name: Tests on all platforms with linting

on: [pull_request]

jobs:
  linting:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Python environment
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test_requirements.txt

      - name: Lint with flake8
        run: flake8

      - name: Check code format with Black
        run: black --check .

  testing:
    needs: linting
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9']
        os: [windows-latest, ubuntu-latest]

      max-parallel: 20
    steps:
    - uses: actions/checkout@v3
    - name: Set Python environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_requirements.txt

    - name: Download spatialite on Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install libsqlite3-mod-spatialite
        sudo apt-get install -y libspatialite-dev
        pip3 install spatialite
        sudo ln -s /usr/lib/x86_64-linux-gnu/mod_spatialite.so /usr/lib/x86_64-linux-gnu/mod_spatialite

    - name: Download spatialite on Windows
      if: matrix.os == 'windows-latest'
      run:  python tests/setup_windows_spatialite.py

    - name: Compile library
      run: |
        cd aequilibrae/paths
        python setup_Assignment.py build_ext --inplace
        cd ../..

    - name: Build
      run: python setup.py sdist bdist_wheel

    - name: Runs test
      run: python -m pytest
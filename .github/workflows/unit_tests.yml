name: Tests on all platforms with linting

on: [pull_request]

jobs:
  linting:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Python environment
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r test_requirements.txt

      - name: Lint with flake8
        run: |
          pip install
          flake8

  testing:
    needs: linting
    runs-on: ${{ matrix.os}}
    strategy:
      matrix:
        python-version: [ '3.7', '3.8', '3.9']
        os: [windows-latest, ubuntu-latest]

      max-parallel: 20
    steps:
    - uses: actions/checkout@v2
    - name: Set Python environment
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_requirements.txt

    - name: Download spatialite
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get install libsqlite3-mod-spatialite
              sudo apt-get install -y libspatialite-dev
              pip3 install spatialite
              sudo ln -s /usr/lib/x86_64-linux-gnu/mod_spatialite.so /usr/lib/x86_64-linux-gnu/mod_spatialite
         elif [ "$RUNNER_OS" == "Windows" ]; then
              cd tests
              python setup_windows_spatialite.py
              cd ..
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi

    - name: Compile library
      run: |
        cd aequilibrae/paths
        python setup_Assignment.py build_ext --inplace
        cd ..
        cd ..

    - name: Build
      run: python setup.py sdist bdist_wheel

    - name: Runs test
      run: |
        python -m pytest
[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''docs/*'''


[build-system]
requires = ["setuptools", "numpy<1.99", "cython", "pyarrow==16.1.0", "wheel"]


[tool.ruff]

select = ["B", "C", "E", "F", "W"]
ignore = ["E501", "F401", "F403", "B028", "B007", "B017"]
exclude = [
    ".idea",
    "__pycache__",
    "sphinx",
    ".ipynb_checkpoints",
    "aequilibrae.egg-info",
    "docs/*",
    "notebooks",
    "bin/hpc",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    ".venv39",
    ".venv310",
    ".venv311",
    ".venv312",
]
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py39"

[tool.ruff.mccabe]
max-complexity = 20

[tool.cibuildwheel]
# While we test this facility we we will only build for 3.10
#build = ["cp310-*"]
build = ["cp39-*","cp310-*", "cp311-*", "cp312-*"]

# We do not build wheels for Python 3.6 or 3.7, or for 32-bit in either Linux or Windows
skip = ["cp36-*", "cp37-*", "cp38-*", "*-win32", "*-manylinux_i686", "*-musllinux*", "*-s390x-*", "*-ppc64le-*"]
test-skip = ""

archs = ["auto"]
build-frontend = "default"
config-settings = {}
dependency-versions = "pinned"
environment = {}
environment-pass = []
build-verbosity = 0

before-all = ""
before-build = ""
repair-wheel-command = ""

test-command = ""
before-test = ""
test-requires = []
test-extras = []

container-engine = "docker"

manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
manylinux-pypy_x86_64-image = "manylinux_2_28"
manylinux-pypy_aarch64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
archs = ["auto", "aarch64"]
build = ["cp310-*", "cp311-*", "cp312-*"]
repair-wheel-command = [
  "auditwheel repair -w {dest_dir} {wheel} --exclude libarrow.so.1601 --exclude libarrow_python.so"
]

[tool.cibuildwheel.macos]
archs = ["arm64"]
#archs = ["x86_64"]
environment = { CC="gcc-12", CXX="g++-12" }
repair-wheel-command = "delocate-wheel -vv --ignore-missing-dependencies --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cython-lint]
max-line-length = 120
